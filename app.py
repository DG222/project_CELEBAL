# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CZEXXFaRjRCh229qewEYQ7_OTSOhg2xT
"""

import streamlit as st
import numpy as np
import joblib
import base64

# === 🖼️ Inject background image ===
def add_bg_from_local(image_file):
    with open(image_file, "rb") as file:
        encoded = base64.b64encode(file.read()).decode()
    st.markdown(
        f"""
        <style>
        .stApp {{
            background-image: url("data:image/jpeg;base64,{encoded}");
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }}
        .block-container {{
            backdrop-filter: blur(3px);
            background-color: rgba(0,0,0,0.55);
            padding: 2rem;
            border-radius: 1rem;
        }}
        h1, h2, h3, h4, h5, h6, label, .stSlider, .stSelectbox, .stMarkdown {{
            color: #f0f0f0 !important;
        }}
        .stButton>button {{
            background-color: #ff4b4b;
            color: white;
            border: none;
            padding: 0.6rem 1rem;
            border-radius: 0.5rem;
        }}
        </style>
        """,
        unsafe_allow_html=True
    )

# 🧠 Load model
model = joblib.load('xgb_house_price_model.pkl')

# 🖼️ Add background image (your JPEG)
add_bg_from_local("image.jpeg")

# 🔧 App Config
st.set_page_config(page_title="🏡 House Price Predictor", layout="centered")

# 📌 App Title & Description
st.title("🏡 House Price Prediction App")
st.markdown("Predict house prices based on key property features using a trained XGBoost model.")

# 📋 Form-style input
st.header("Enter House Details:")

OverallQual = st.selectbox("Overall Quality (1 = Poor, 10 = Excellent)", list(range(1, 11)), index=5)
GrLivArea = st.slider("Above Ground Living Area (sqft)", min_value=300, max_value=6000, value=1500, step=50)
TotalBsmtSF = st.slider("Total Basement Area (sqft)", min_value=0, max_value=3000, value=800, step=50)
YearBuilt = st.slider("Year Built", min_value=1870, max_value=2020, value=1995)
GarageCars = st.selectbox("Garage Capacity (Cars)", [0, 1, 2, 3, 4], index=2)
FullBath = st.selectbox("Number of Full Bathrooms", [0, 1, 2, 3], index=1)
TotRmsAbvGrd = st.slider("Total Rooms Above Ground", 2, 15, 6)
Fireplaces = st.selectbox("Number of Fireplaces", [0, 1, 2, 3], index=1)

# 🔢 Combine into input vector
input_data = np.array([[
    OverallQual, GrLivArea, TotalBsmtSF, YearBuilt,
    GarageCars, FullBath, TotRmsAbvGrd, Fireplaces
]])

# 🧾 Predict button
if st.button("Predict Sale Price"):
    predicted_price = model.predict(input_data)[0]
    st.success(f"💰 Estimated Sale Price: **${predicted_price:,.2f}**")
    st.balloons()

